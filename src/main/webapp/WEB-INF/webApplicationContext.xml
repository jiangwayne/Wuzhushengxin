<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/mvc
	   http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
    <!-- 向Spring容器注册4个BeanPostProcessor激活相应的注解： AutowiredAnnotationBeanPostProcessor（@Autowired）
            CommonAnnotationBeanPostProcessor（@Resource，@ PostConstruct，@ PreDestroy）
            PersistenceAnnotationBeanPostProcessor（@PersistenceContext） RequiredAnnotationBeanPostProcessor（@Required） -->
    <!-- <context:annotation-config /> -->

    <!-- 定义扫描根路径为com.jjjr.**，不使用默认的扫描方式。 使用注解一般都会配置扫描包路径选项，也包含了自动注入上述processor的功能，
        因此当使用<context:component-scan/>后，就可以将<context:annotation-config/>移除 -->
    <context:component-scan base-package="wayne.wuzhushengxin.server.**"
                            use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice" />
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Service" />
        <!--<context:include-filter type="annotation" -->
                                <!--expression="org.springframework.stereotype.Repository" />-->
    </context:component-scan>

    <!--&lt;!&ndash; 注册DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter， 激活相应的注解：@Controller，@RequestMapping &ndash;&gt;-->
    <mvc:annotation-driven
            content-negotiation-manager="contentNegotiationManager">
        <!--<mvc:message-converters>-->
            <!--<ref bean="stringHttpMessageConverter" />-->
            <!--<ref bean="mappingJacksonHttpMessageConverter" />-->
        <!--</mvc:message-converters>-->
    </mvc:annotation-driven>
    <!--<bean id="mappingJacksonHttpMessageConverter"-->
          <!--class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
        <!--<property name="supportedMediaTypes">-->
            <!--<list>-->
                <!--<value>application/json;charset=UTF-8</value>-->
                <!--<value>text/plain;charset=UTF-8</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; REST中根据URL后缀自动判定Content-Type及相应的View &ndash;&gt;-->
    <bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="ignoreAcceptHeader" value="true" />
        <property name="defaultContentType" value="application/json" />
        <property name="mediaTypes">
            <value>
                json=application/json
                xml=application/xml
            </value>
        </property>
    </bean>

    <!--<bean id="stringHttpMessageConverter"-->
          <!--class="org.springframework.http.converter.StringHttpMessageConverter">-->
        <!--&lt;!&ndash; 避免出现乱码 &ndash;&gt;-->
        <!--<constructor-arg value="UTF-8" index="0" />-->
        <!--<property name="supportedMediaTypes">-->
            <!--<list>-->
                <!--<value>text/plain;charset=UTF-8</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 容器默认DefaultServletHandler处理所有静态内容和无RequestMapping处理的URL -->
    <mvc:default-servlet-handler />
    
    <import resource="classpath*:spring/datasource.xml"/>
    <import resource="classpath*:spring/service.xml"/>
    <import resource="classpath*:spring/web.xml"/>
</beans>